plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.bancopopular.spi.KeyGeneratorSrv'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17) // Java 17 OK
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url "https://jaspersoft.jfrog.io/artifactory/third-party-ce-artifacts/" }
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// JPA con javax
	implementation 'javax.persistence:javax.persistence-api:2.2'

	// JAXB (si lo necesitas para XML / SOAP con WebLogic)
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

	// OpenAPI (compatible con Spring Boot 2.7)
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0' // versi√≥n compatible con Spring Boot 2.7

	// ModelMapper
	implementation 'org.modelmapper:modelmapper:3.1.1'

	// JasperReports
	implementation 'net.sf.jasperreports:jasperreports:6.19.1'

	// Bouncy Castle
	implementation 'org.bouncycastle:bcpg-jdk15on:1.70'

	// iText (PDF)
	implementation 'com.lowagie:itext:2.1.7'

	// Oracle JDBC
	implementation 'com.oracle.database.jdbc:ojdbc8:21.3.0.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Dev y test
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.withType(Test) {
	systemProperty 'file.encoding', 'UTF-8'
}

bootRun {
	jvmArgs = ['-Dfile.encoding=UTF-8']
}
